{# --==============================================================================                                                                         -- #}
{# --                                                                                                                                                       -- #}
{# -- DBMS Name          : SQL Server                                                                                                                       -- #}
{# -- Template Name      : nu3_sqlserver_block_select_stage                                                                                                 -- #}
{# -- Description        : This template creates a SELECT block for stage objects                                                                           -- #}
{# --                      to be used for views and procedures                                                                                              -- #}
{# --                                                                                                                                                       -- #}
{# --==============================================================================                                                                         -- #}
{# --                                                                                                                                                       -- #}
{# -- History                                                                                                                                               -- #}
{# -- 20171120 | Eckhard Zemp         | Initial Creation                                                                                                    -- #}
{# -- 20171212 | Eckhard Zemp         | Finally found a way to reuse the stage block                                                                        -- #}
{# --                                                                                                                                                       -- #}
{# --==============================================================================                                                                         -- #}

{#- Select Load #}
{{- indent }}SELECT {{ distinct() }}{% br %}
                    {{- addSelectColumnsLoad(indent = indent + "      ", sysObjectType = sysObjectType) }}
{{- indent }}FROM   ({% br %}

{#- Select Lookup #}
{{- indent }}  SELECT {{ table.name }}.*{% br %}
                      {{- addSelectColumnsLookup(indent = indent + "        ",firstInClause = false) }}
{{- indent }}  FROM   ({% br %}

{#- Select Unique #}
{{- indent }}    SELECT *{% br %}
                        {{- addSelectColumnsCondense(indent = indent + "          ",firstInClause = false) }}
{{- indent }}    FROM   ({% br %}

{#- Select Hash #}
{{- indent }}      SELECT *{% br %}
                          {{- addSelectColumnsHash(indent = indent + "            ",firstInClause = false) }}
{{- indent }}      FROM   ({% br %}

{#- Select Clean hubHashBK #}
{{- indent }}        SELECT {% br %}
                            {{- addSelectColumnsHashBKClean(indent = indent + "              ") }}
{{- indent }}        FROM   ({% br %}      

{#- Select Extract #}
              {%- if table.viewInfo is defined -%}
                {%- if mergeTable != "" %}
{{- indent }}          SELECT {% br %}
                              {{- addSelectColumnsExtractMerge(indent = indent + "                ")}}
{{- indent }}          FROM   [TABLEOWNER].[{{ mergeTable }}] AS {{ mergeTable }}{%br%}                
                {%- elseif table.viewInfo.whereClause contains "FROM" -%}
{{- indent }}          SELECT {% br %}
                              {{- addSelectColumnsExtract(indent = indent + "                ")}}
                              {{- getLines(indent = indent + "                ",object = table.viewInfo.whereClause) }}{% br %}
                {%- else -%}
{{- indent }}          SELECT {% br %}
                              {{- addSelectColumnsExtract(indent = indent + "                ")}}
{{- indent }}          FROM   {{getSourceTableView(target_database = table.database)}}{% br %}
                              {{- getLines(indent = indent + "                ",object = table.viewInfo.whereClause) }}{% br %}
                {%- endif %}
              {%- else %}
                {%- if mergeTable != "" %}
{{- indent }}          SELECT {% br %}
                              {{- addSelectColumnsExtractMerge(indent = indent + "                ")}}
{{- indent }}          FROM   [TABLEOWNER].[{{ mergeTable }}] AS {{ mergeTable }}{%br%}                
                {%- elseif hasHashKey == true and sysObjectType == "TABLE" %}
{{- indent }}          SELECT *{% br %}
{{- indent }}          FROM   {{ TempTable }} AS {{ table.name }}{% br %}
                {%- else %}
{{- indent }}          SELECT {% br %}
                              {{- addSelectColumnsExtract(indent = indent + "                ") }}
                       {%- if table.sourceJoinDetails.join | trim != "" %}{{- indent }}          {{ getLines(indent = indent + "          ",object = table.sourceJoinDetails.join) }}{% br %}{%- endif %}
                       {%- if table.sourceJoinDetails.where | trim != "" %}{{- indent }}          {{ getLines(indent = indent + "          ",object = table.sourceJoinDetails.where) }}{% br %}{%- endif %}
                       {%- if table.sourceJoinDetails.groupBy | trim != "" %}{{- indent }}          {{ getLines(indent = indent + "          ",object = table.sourceJoinDetails.groupBy) }}{% br %}{%- endif %}
                {%- endif %}
              {%- endif %}                
{{- indent }}        ) AS {{ table.name }}{% br %}
{{- indent }}      ) AS {{ table.name }}{% br %}
{{- indent }}    ) AS {{ table.name }}{% br %}   
{{- indent }}  ) AS {{ table.name }}{% br %}
               {%- if hasBK == true %}{{- indent }}  WHERE {{ table.name }}.{{ dssRowNo() }} = 1{% br %}{%- endif %}
               {{- addLookupDimension(indent = indent + "  ") }}        
{{- indent }}) AS {{ table.name }}{% br %}
